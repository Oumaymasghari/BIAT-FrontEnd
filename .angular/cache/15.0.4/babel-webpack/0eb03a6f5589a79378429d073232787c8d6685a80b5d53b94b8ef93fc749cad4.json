{"ast":null,"code":"import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nvar httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nvar UserService = /** @class */function () {\n  function UserService(http) {\n    this.http = http;\n    this.API_URL = 'http://localhost:8089/api/auth';\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    this.currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n  UserService.prototype.signin = function (username, password, token, roles) {\n    var headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    return this.http.post(\"\".concat(this.API_URL, \"/signin\"), {\n      username: username,\n      password: password,\n      token: token,\n      roles: roles\n    }, {\n      headers: headers\n    }).pipe(map(function (response) {\n      var user = response.username;\n      var token = response.token;\n      // localStorage.setItem('currentUser', JSON.stringify({ user, token }));\n      // this.currentUserSubject.next({ user, token });\n      localStorage.setItem('token', response.token);\n      return response;\n    }));\n  };\n  UserService.prototype.signup = function (username, email, password) {\n    return this.http.post(\"\".concat(this.API_URL, \"/signup\"), {\n      username: username,\n      email: email,\n      password: password\n    }, httpOptions);\n  };\n  UserService.prototype.logout = function () {\n    localStorage.removeItem('token');\n  };\n  UserService.prototype.isLoggedIn = function () {\n    var token = localStorage.getItem('token');\n    return token !== null;\n  };\n  UserService.prototype.getToken = function () {\n    return localStorage.getItem('accessToken') || '';\n  };\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n}();\nexport { UserService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}