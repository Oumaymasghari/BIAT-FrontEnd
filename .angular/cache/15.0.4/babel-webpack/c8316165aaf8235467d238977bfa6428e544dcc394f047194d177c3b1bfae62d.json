{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { CovoiturageModule } from 'src/app/shared/Module/covoiturage/covoiturage.module';\nimport { CovoiturageService } from 'src/app/shared/Services/covoiturage/covoiturage.service';\nimport { PostCommentService } from 'src/app/shared/Services/postComment/post-comment.service';\nimport { StorageService } from 'src/app/shared/Services/storage/storage.service';\nimport { UserService } from 'src/app/shared/Services/user/user.service';\nvar PostsComponent = /** @class */function () {\n  function PostsComponent(covoiturageService, storageService, userservice, http, postCommentService) {\n    this.covoiturageService = covoiturageService;\n    this.storageService = storageService;\n    this.userservice = userservice;\n    this.http = http;\n    this.postCommentService = postCommentService;\n    // REACTION \n    this.emojiList = ['üòÄ', 'üòç', 'üëç', 'üëé', 'üéâ'];\n    this.reactions = ['üòÄ', 'üòç', 'üëç', 'üëé', 'üéâ'];\n    this.showReactions = false;\n  }\n  PostsComponent.prototype.ngOnInit = function () {\n    this.currentUser = this.storageService.getUser();\n    this.getAllcov();\n    this.covoiturage = {\n      id: null,\n      heureDepart: null,\n      depart: null,\n      arrivee: null,\n      datedepart: null,\n      nbPersonne: null,\n      prix: null,\n      contactNumber: null,\n      // Reaction properties\n      likeCount: null,\n      loveCount: null,\n      thumbsUpCount: null,\n      thumbsDownCount: null,\n      celebrationCount: null,\n      datePost: new Date()\n    };\n    this.selectedEmoji = '';\n    this.selectedCount = 0;\n    this.covoiturage = new CovoiturageModule();\n  };\n  PostsComponent.prototype.onReactionClick = function (reaction) {\n    this.currentEmoji = reaction;\n    this.showReactions = false;\n  };\n  PostsComponent.prototype.toggleReactions = function () {\n    this.showReactions = !this.showReactions;\n  };\n  // onClickReaction(emoji: string) {\n  //   this.selectedEmoji = emoji;\n  //   this.addReaction();\n  // }\n  // addReaction() {\n  //   this.selectedCount++;\n  //   const covId = this.covoiturage.id; // Replace with the actual post ID\n  //   const reactionName = this.selectedEmojiToName(this.selectedEmoji);\n  //   this.http.post(`/api/posts/${covId}/reactions/${reactionName}`, {})\n  //     .subscribe((covoiturage: CovoiturageModule) => {\n  //       this.covoiturage = covoiturage;\n  //     });\n  // }\n  // selectedEmojiToName(emoji: string): string {\n  //   switch (emoji) {\n  //     case 'üòÄ':\n  //       return 'like';\n  //     case 'üòç':\n  //       return 'love';\n  //     case 'üëç':\n  //       return 'thumbs-up';\n  //     case 'üëé':\n  //       return 'thumbs-down';\n  //     case 'üéâ':\n  //       return 'celebration';\n  //     default:\n  //       throw new Error('Invalid emoji');\n  //   }\n  // }\n  ///////////////covoiturage \n  PostsComponent.prototype.addcov = function (covoiturage) {\n    var _this = this;\n    if (this.userservice.checkIsAuthenticated()) {\n      console.log(\"user \" + JSON.stringify(this.userservice.getCurrentUser()));\n      this.covoiturageService.addCovoiturage(covoiturage).subscribe(function () {\n        _this.listPostsCov.unshift(covoiturage);\n        //this.getAllcov();\n      });\n    } else {\n      console.log('User is not authenticated');\n    }\n  };\n  PostsComponent.prototype.getAllcov = function () {\n    var _this = this;\n    this.covoiturageService.retrieveallCov().subscribe(function (res) {\n      _this.listPostsCov = res;\n    });\n  };\n  /////////COMMENT \n  PostsComponent.prototype.onComment = function (PostComment) {\n    this.postCommentService.addPostComment(PostComment).subscribe(function () {\n      PostComment.comment_text.push(PostComment);\n      //this.getAllcov();\n    });\n  };\n\n  PostsComponent = __decorate([Component({\n    selector: 'app-posts',\n    templateUrl: './posts.component.html',\n    styleUrls: ['./posts.component.scss']\n  }), __metadata(\"design:paramtypes\", [CovoiturageService, StorageService, UserService, HttpClient, PostCommentService])], PostsComponent);\n  return PostsComponent;\n}();\nexport { PostsComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}